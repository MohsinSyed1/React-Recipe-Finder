{"version":3,"sources":["components/headerComponent.js","components/recipeComponent.js","App.js","reportWebVitals.js","index.js"],"names":["HeaderComponent","styled","div","AppNameComponent","AppIcon","img","SearchIcon","SearchComponent","foo","SearchInput","input","Container","RecipeListContainer","RecipeContainer","CoverImage","RecipeName","IngredientsText","SeeMoreText","Placeholder","RecipeComponent","props","useState","show","setShow","console","log","recipeObj","Dialog","open","DialogTitle","id","DialogContent","ingredients","map","ingredientObj","text","weight","DialogActions","onClick","window","url","src","image","label","App","timeOutId","updateTimeOut","recipeList","updateRecipeList","fetchRecipe","searchString","a","Axios","get","response","data","hits","placeholder","onChange","event","clearTimeout","timeOut","setTimeout","target","value","length","recipe","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ece6e482.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst HeaderComponent = styled.div`\r\n  color: white;\r\n  background-color: black;\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 20px;\r\n  font: 20p;\r\n  font-weight: bold;\r\n  box-shadow: 0px 3px 6px 0 #555;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst AppNameComponent = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst AppIcon = styled.img`\r\n  width: 36px;\r\n  height: 36px;\r\n  margin: 15px;\r\n`;\r\n\r\nconst SearchIcon = styled.img`\r\n  width: 32px;\r\n  height: 32px;\r\n`;\r\n\r\nconst SearchComponent = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  background-color: white;\r\n  padding: 10px;\r\n  border-radius: 6px;\r\n  width: 50%;\r\n`;\r\nconst SearchInput = styled.input`\r\n  border: none;\r\n  outine: none;\r\n  margin-left: 15px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst foo = {\r\n  SearchInput,\r\n  SearchComponent,\r\n  SearchIcon,\r\n  AppIcon,\r\n  AppNameComponent,\r\n  HeaderComponent,\r\n  Container,\r\n};\r\nexport default foo;\r\n","import styled from \"styled-components\";\r\n\r\nexport const RecipeListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  padding: 30px;\r\n  justify-content: space-evenly;\r\n  gap: 20px;\r\n`;\r\nexport const RecipeContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 30px;\r\n  width: 300px;\r\n  box-shadow: 0px 3px 10px 0 #aaa;\r\n`;\r\nexport const CoverImage = styled.img`\r\n  height: 200px;\r\n  object-fit: cover;\r\n`;\r\n\r\nexport const RecipeName = styled.div`\r\n  font-size: 18px;\r\n  color: black;\r\n  font-weight: bold;\r\n  margin: 10p 0;\r\n`;\r\nexport const IngredientsText = styled.div`\r\n  font-size: 18px;\r\n  border: solid 1px green;\r\n  border-radius: 3px;\r\n  color: green;\r\n  font-weight: bold;\r\n  margin: 10p 0;\r\n  cursor: pointer;\r\n  padding: 10px 15px;\r\n  text-align: center;\r\n  margin-bottom: 12px;\r\n`;\r\n\r\nexport const SeeMoreText = styled.div`\r\n  color: #eb3300;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  border: solid 1px #eb3300;\r\n  border-radius: 3px;\r\n  padding: 10px 15px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const Placeholder = styled.img`\r\n  width: 120px;\r\n  height: 120px;\r\n  margin: 200px;\r\n  opacity: 50%;\r\n`;\r\n","import { useState } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Header from \"./components/headerComponent\";\r\n\r\nimport {\r\n  RecipeListContainer,\r\n  RecipeContainer,\r\n  CoverImage,\r\n  RecipeName,\r\n  IngredientsText,\r\n  SeeMoreText,\r\n  Placeholder,\r\n} from \"./components/recipeComponent\";\r\nimport Axios from \"axios\";\r\n\r\nconst RecipeComponent = (props) => {\r\n  const [show, setShow] = useState(false);\r\n  console.log(props);\r\n  const { recipeObj } = props;\r\n  return (\r\n    <>\r\n      <Dialog open={show}>\r\n        <DialogTitle id=\"alert-dialog-slide-title\">Ingredients</DialogTitle>\r\n        <DialogContent>\r\n          <table>\r\n            <thead>\r\n              <th>Ingredients</th>\r\n              <th>Weight</th>\r\n            </thead>\r\n            <tbody>\r\n              {recipeObj.ingredients.map((ingredientObj) => (\r\n                <tr>\r\n                  <td>{ingredientObj.text}</td>\r\n                  <td>{ingredientObj.weight}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <IngredientsText onClick={() => window.open(recipeObj.url)}>\r\n            See More\r\n          </IngredientsText>\r\n          <SeeMoreText onClick={() => setShow(false)}>Close</SeeMoreText>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <RecipeContainer>\r\n        <CoverImage src={recipeObj.image} />\r\n        <RecipeName>{recipeObj.label}</RecipeName>\r\n        <IngredientsText onClick={() => setShow(true)}>\r\n          Ingredients\r\n        </IngredientsText>\r\n        <SeeMoreText onClick={() => window.open(recipeObj.url)}>\r\n          See Complete Recipe\r\n        </SeeMoreText>\r\n      </RecipeContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nconst APP_ID = \"6e89be1d\";\r\nconst APP_KEY = \"b2862808995a1b8aee5c836c6f23b316\";\r\n\r\nfunction App() {\r\n  const [timeOutId, updateTimeOut] = useState();\r\n  const [recipeList, updateRecipeList] = useState([]);\r\n  const fetchRecipe = async (searchString) => {\r\n    const response = await Axios.get(\r\n      `https://api.edamam.com/search?q=${searchString}&app_id=${APP_ID}&app_key=${APP_KEY}`\r\n    );\r\n    console.log(response);\r\n    updateRecipeList(response.data.hits);\r\n  };\r\n  const onTextChange = (event) => {\r\n    clearTimeout(timeOutId);\r\n    const timeOut = setTimeout(() => fetchRecipe(event.target.value), 500);\r\n    updateTimeOut(timeOut);\r\n  };\r\n\r\n  return (\r\n    <Header.Container>\r\n      <Header.HeaderComponent>\r\n        <Header.AppNameComponent>\r\n          <Header.AppIcon src=\"react-recipe-finder/hamburger.svg\" />\r\n          Recipe Finder\r\n        </Header.AppNameComponent>\r\n        <Header.SearchComponent>\r\n          <Header.SearchIcon src=\"react-recipe-finder/search-icon.svg\" />\r\n          <Header.SearchInput\r\n            placeholder=\"Search Recipe\"\r\n            onChange={onTextChange}\r\n          />\r\n        </Header.SearchComponent>\r\n      </Header.HeaderComponent>\r\n      <RecipeListContainer>\r\n        {recipeList.length ? (\r\n          recipeList.map((recipeObj) => (\r\n            <RecipeComponent recipeObj={recipeObj.recipe} />\r\n          ))\r\n        ) : (\r\n          <Placeholder src=\"react-recipe-finder/hamburger.svg\" />\r\n        )}\r\n      </RecipeListContainer>\r\n    </Header.Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}